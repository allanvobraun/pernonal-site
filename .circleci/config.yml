version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:16.14.0
    working_directory: /tmp
orbs:
  aws-cli: circleci/aws-cli@2.0.0
  
jobs:
  build:
    executor: node
    resource_class: medium
    description: build docker
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile --prefer-offline --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - restore_cache:
          name: Restore turborepo build cache
          keys:
            - turborepo
      - run:
          name: build with turborepo
          command: yarn run build
      - save_cache:
          name: Save turborepo build cache
          key: turborepo
          paths:
            - ./turbocache
      - persist_to_workspace:
          root: pernonal-site
          paths:
            - apps
  build-docker:
    description: build and push docker images to public AWS ECR registry
    executor: aws-cli/default
    working_directory: /tmp
    resource_class: medium
    parameters:
      profile-name:
        type: string
        default: "default"
        description: AWS profile name to be configured.

      aws-access-key-id:
        type: env_var_name
        default: AWS_ACCESS_KEY_ID
        description: >
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will set to hold this
          value, i.e. AWS_ACCESS_KEY.
      aws-secret-access-key:
        type: env_var_name
        default: AWS_SECRET_ACCESS_KEY
        description: >
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will set to hold this
          value, i.e. AWS_SECRET_ACCESS_KEY.
      region:
        type: env_var_name
        default: AWS_REGION
        description: >
          Name of env var storing your AWS region information,
          defaults to AWS_REGION
      account-url:
        type: env_var_name
        default: AWS_ECR_ACCOUNT_URL
        description: >
          Env var storing Amazon ECR account URL that maps to an AWS account,
          e.g. {awsAccountNum}.dkr.ecr.us-west-2.amazonaws.com
          defaults to AWS_ECR_ACCOUNT_URL
      dockerfile:
        type: string
        default: Dockerfile
        description: Name of dockerfile to use. Defaults to Dockerfile.

      path:
        type: string
        default: .
        description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).

      extra-build-args:
        type: string
        default: ""
        description: >
          Extra flags to pass to docker build. For examples, see
          https://docs.docker.com/engine/reference/commandline/build
      repo:
        type: string
        description: Name of an Amazon ECR repository

      tag:
        type: string
        default: "latest"
        description: A comma-separated string containing docker image tags to build and push (default = latest)
    steps:
      - attach_workspace:
          at: /tmp/pernonal-site
      - run:
          name: ls
          command: ls


workflows:
  build-and-deploy:
    jobs:
      - build
      - build-docker:
          requires:
            - build
          repo: "personal-site-backend"
          tag: "latest,${CIRCLE_SHA1:0:8}"